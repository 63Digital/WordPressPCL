# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '-c Release'

# Create Docker Test instance
# https://www.datanovia.com/en/lessons/using-docker-wordpress-cli-to-manage-wordpress-websites/
- task: Bash@3
  displayName: 'Create dockerzied WordPress'
  inputs:
    filePath: 'pipelines/docker-wordpress.sh'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests: Selfhosted WordPress'
  inputs:
    command: 'test'
    projects: 'WordPressPCL.Tests.Selfhosted/WordPressPCL.Tests.Selfhosted.csproj'
    testRunTitle: 'Test Selfhosted'

- task: Bash@3
  displayName: 'Remove Docker containers'
  inputs:
    filePath: 'pipelines/kill-docker.sh'

- task: Bash@3
  displayName: 'Create dockerzied WordPress for JWT-Auth Plugin'
  inputs:
    filePath: 'pipelines/docker-wordpress.sh'